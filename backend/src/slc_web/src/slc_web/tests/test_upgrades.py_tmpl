"""Upgrades tests for this package."""
from parameterized import parameterized
from plone.app.testing import setRoles
from plone.app.testing import TEST_USER_ID
from Products.GenericSetup.upgrade import listUpgradeSteps
from slc_web import PACKAGE_NAME
from slc_web.testing import SLC_WEB_INTEGRATION_TESTING  # noqa: E501

import unittest


class UpgradeStepIntegrationTest(unittest.TestCase):

    layer = SLC_WEB_INTEGRATION_TESTING
    profile = f"{PACKAGE_NAME}:default"

    def setUp(self):
        """Custom shared utility setup for tests."""
        self.portal = self.layer["portal"]
        self.setup = self.portal["portal_setup"]
        setRoles(self.portal, TEST_USER_ID, ["Manager"])

    def _match(self, item, source, dest):
        source, dest = tuple([source]), tuple([dest])
        return item["source"] == source and item["dest"] == dest

    def available_steps(self) -> list:
        """Test available steps."""
        steps = listUpgradeSteps(self.setup, self.profile, self.src)
        steps = [s for s in steps if self._match(s[0], self.src, self.dst)]
        return steps

    # Upgrade steps test
    @parameterized.expand(
        [
            ("20230511001", "20230229001", 1),
            ("20230229001", "20230726001", 1),
        ]
    )
    def test_available(self, src, dst, expected):
        """Test upgrade step is available."""
        steps = self.available_steps(src, dst)
        self.assertEqual(len(steps), expected)
